# .github/workflows/deploy.yml
name: Deploy to VPS

on:
  push:
    branches: [main] # or your default branch
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build all Docker images
        run: |
          docker-compose build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Save Docker images
        run: |
          mkdir -p images
          docker save auth-service:latest ticket-service:latest notification-service:latest frontend-next:latest | gzip > images/services.tar.gz

      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Copy files to VPS
        run: |
          # Disable strict host key checking
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

          sshpass -p '${{ secrets.VPS_PASSWORD }}' scp -o StrictHostKeyChecking=no \
            docker-compose.yml \
            images/services.tar.gz \
            .env \
            deploy.sh \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/app/

      - name: Deploy to VPS
        run: |
          sshpass -p '${{ secrets.VPS_PASSWORD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} '
            cd ~/app
            # Load the images
            gunzip -c images/services.tar.gz | docker load
            
            # Create .env file
            cat << EOF > .env
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            EOF
            
            # Make deploy script executable
            chmod +x deploy.sh
            
            # Run deploy script
            ./deploy.sh
          '
